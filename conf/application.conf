# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"

appName = help-to-save-proxy

# Play Modules
# ~~~~
# Additional play modules can be added here

play.modules.enabled += "uk.gov.hmrc.helptosaveproxy.config.CustomWSConfigParserModule"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

play.modules.disabled += "play.api.libs.ws.ahc.AhcWSModule"
play.modules.enabled += "uk.gov.hmrc.helptosaveproxy.http.NewWSModule"

play.filters.disabled += play.filters.csrf.CSRFFilter
play.filters.disabled += play.filters.hosts.AllowedHostsFilter

httpHeadersAllowslist += ${microservice.correlationIdHeaderName}

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG

microservice {
  services {
    auth {
      host = localhost
      port = 8500
    }

    nsi {
      host = localhost
      port = 7002
      manage-account {
        url = "https://nsandi.com"
      }
      client {
        base64KeystoreType = "pkcs12"
#       password is "ncpw"
        base64KeystorePassword = "bmNwdw=="
        base64Keystore = "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"

        httpheader {
          basicauth {
            Base64User = "dXNlcm5hbWU=" //username
            Base64Password = "cGFzc3dvcmQ=" //password
          }
          header-key = "Authorization-test"
          encoding = "UTF-8"
        }
      }
      keyManager = {
        prototype = { stores = {} }
        stores = [
          {
            type = ${microservice.services.nsi.client.base64KeystoreType}
            password = ${microservice.services.nsi.client.base64KeystorePassword}
            data = ${microservice.services.nsi.client.base64Keystore}
          }
        ]
      }
      trustManager = {
        prototype = { stores = {} }
        stores = [
          {
            data = ${microservice.services.nsi.server.base64Certificate}
          }
        ]
      }
      server {
        base64Certificate = "LS0tLS1CRUdJTiBQS0NTNy0tLS0tCk1JSUM5d1lKS29aSWh2Y05BUWNDb0lJQzZEQ0NBdVFDQVFFeEFEQUxCZ2txaGtpRzl3MEJCd0dnZ2dMS01JSUMKeGpDQ0FhNENDUURsWHlmQXdTTEU0akFOQmdrcWhraUc5dzBCQVFzRkFEQWxNUTh3RFFZRFZRUUtEQVp1YzJGdQpaR2t4RWpBUUJnTlZCQU1NQ1d4dlkyRnNhRzl6ZERBZUZ3MHlNekF5TURJeE5EVTNOREJhRncwek16QXhNekF4Ck5EVTNOREJhTUNVeER6QU5CZ05WQkFvTUJtNXpZVzVrYVRFU01CQUdBMVVFQXd3SmJHOWpZV3hvYjNOME1JSUIKSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTJ0di80U0djVzRPbUlTTnBkOTBpQlJ6TQp6M0o0ek5CR2lUdDQ2NXJVeWpKamJmblF3U0NyQ0tESllVTHgxZmUyalJKQXRWalNSOXJDZmxxaVFkMjhKTWFiCjl5aStQSnoySUg4VDFFUXN0VVh6L0QyeDU4UkV2UlllKzlza1puVjhOaGw1UkRQeFRkVnlEQ0NkN2QxbXo5emsKTDM4bWFDV3lEL0R2RXgwVVFoVm56ZUVLTkI1dDl6cGNrZmJhNFdNb1RzMjArYytPUjdwQUFCdmRsc28yT04vYQowUG9YK1dqN2g0b1VpMG5NQjRWeEdBUEhkVmQwWGJ2eDBSeGNzckhCUHphTWZTZnAwRk9uTmhhRnluZGJHcnZLCitOZWJjK0szU2RnK2lPY1d3UklPdC9WRmhRdjVoL1g5Mko1ckJBMGY3Y01hRXVQd1owd3RWZjNqZkY0WkF3SUQKQVFBQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnQ1bFRvTVd1b09aTktTLzAwT2p5S2tScUVQalRsV1JaSQpyTFRUdjJma0xTT0hvSUhnQi9VaXJsU24yZzYzKzJJVFhqWEZyTXZkbGNJaDlRa2JGVnlvWnpqdWhLQmVNSHYzCmFONXYzWVVtamhReU9mdXR4a3UwRklZbnk1eWdxWFhoeE15TkFZSU5BQkhIamJ5VVJ5UGU1MG9jN1lmUWdWWkcKSFFhTG9xd1pEN3RZelhScVB2dVBGT3liTXZYMFZRUGIwbGdDYmd3dGIvS0tGVHdKbFMrd01IanF5bHdGVDBBdApKWVFGZkxVbEJPRmlxUXhxYkY0RExmZUJlVkpYZ2dtT1BBeWVCMDU5RW5IM2F5NWVURVJqZXMrQkE3d0hyZXYzCm1mem0rSnl5b3Q4TE9zTWFNamluTDBWMmppMWxqYUU1Ni83NHU1dGFkRE1Bdkt3QlQwVE1vUUF4QUE9PQotLS0tLUVORCBQS0NTNy0tLS0tCg=="
        base64TruststorePassword = ""

      }
    }

    dwp {
      host = localhost
      port = 7002
      system-id = 607
      check = "hmrc"
      client {
        base64KeystoreType = "pkcs12"
#       password is "dcpw"
        base64KeystorePassword = "ZGNwdw=="
        base64Keystore = "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"
      }
      keyManager = {
        prototype = { stores = {} }
        stores = [
          {
            type = ${microservice.services.dwp.client.base64KeystoreType}
            password = ${microservice.services.dwp.client.base64KeystorePassword}
            data = ${microservice.services.dwp.client.base64Keystore}
          }
        ]
      }
      trustManager = {
        prototype = { stores = {} }
        stores = [ {
          data = ${microservice.services.dwp.server.base64Certificate}
        } ]
      }
      server {
        base64Certificate = "LS0tLS1CRUdJTiBQS0NTNy0tLS0tCk1JSUM4UVlKS29aSWh2Y05BUWNDb0lJQzRqQ0NBdDRDQVFFeEFEQUxCZ2txaGtpRzl3MEJCd0dnZ2dMRU1JSUMKd0RDQ0FhZ0NDUUQvenp6VmFLa3daekFOQmdrcWhraUc5dzBCQVFzRkFEQWlNUXd3Q2dZRFZRUUtEQU5rZDNBeApFakFRQmdOVkJBTU1DV3h2WTJGc2FHOXpkREFlRncweU16QXlNREl4TkRVMk5UVmFGdzB6TXpBeE16QXhORFUyCk5UVmFNQ0l4RERBS0JnTlZCQW9NQTJSM2NERVNNQkFHQTFVRUF3d0piRzlqWVd4b2IzTjBNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3L3NUR043QnRMcDVDcVZCMTZ1WldLeWF2RmpSbGEyNApMcEovbGVoNkpQTDBRaDd3aDZMNkdHS0xVOFF3YVppSUd2bWRjNDEwWk52MGlNS29zVURRSDlINGtvKzU5YUdCCkNOa1lPNUlucDludk9JVGdPY3JrNTMxWGxNaFh6cmt1b0dYZHAySXJMT09QemlQeXJSTHd3T0E3SUtpanRrSzMKbzVMVU5iTHJSeXBENjJibEhqMW05MFk3TCt5Wld4aTJsTW5hdFF5UVVmcmJMbzdoZmhlUXBYK1J1VjhZZUE0VgpGOUV5Q0xjNU1DOWxGb2theHhtZ0cyRWJGQ0w4NTFBSEV0TElodnZHQU1reEw1Z2x1V090VzVxRGY2UEpTNEt6CnNmZ3JJZVdOM0VTUXZNa0tYWU5KQURMNVhUcFMrc0RoSEYrNzRQVE5MTkkrMjlybEdzNkJMUUlEQVFBQk1BMEcKQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNNN0wxOVdWUDIzSUdPNmJIL2NmdDBzZHhKSnRnRVB0UU5wYm9OZVorVAprOE9sTyt0OUh3cjdPS1BXN3R5akxxOFcvRGFrR3dYMFExbCs3alloVk04VFEvRE1MS0NZalBYTTNmNWRrMkxaClI2bllTY1RzcnhtRVR1bkNzSUpLZmk0SmJaYmZxeUs3U05oVTJjdzhkYk1OVXhlaDYvQ2ZveCtoVHZmUUV6N3MKWjRkRXJUQkw5RjVGVzQrMHZUcjlpK1F4VjN1WTB3MTduZ1FsdkRNejhjN3gxRWFhcC95TDBmTXJnNDVrUVNZZQpUWVZDV3psMjdjc2Y5WFhkcHFXNmRWNzJWc3dCWml5bDR4NytENUZmenZMOURvN1R4V0RUNmdMT3M1d2FaRkZiCk9TOGRqYTdtRnVFSWswS3hkWStvaitlZXhWUjBRcXBXQldnRXBaQmE3dWdlb1FBeEFBPT0KLS0tLS1FTkQgUEtDUzctLS0tLQo="
        base64TruststorePassword = ""
      }
    }
  }

  correlationIdHeaderName = "X-Correlation-ID"
}

nino-logging.enabled = true

email-validation {
  # the maximum total length of an email address
  max-total-length = 254

  # the maximum length of the local part of email address
  max-local-length = 64

  # the maximum length of the domain part of email address
  max-domain-length = 252
}

feature-toggles {
  create-account-json-validation {
    enabled = true
  }

  log-account-creation-json {
    enabled = false
  }
}

play.ws.ssl {
  # Default platform timeout is 60s which is fine as-is
  # timeout.request = 60s

  # Handles the server root CA cert list; used by the client to verify the server
  trustManager = {
    stores = [
      # Play seems to be loading default truststore without requiring any explicit config or password...
      {
        data = ${microservice.services.nsi.server.base64Certificate}
      },
      {
        data = ${microservice.services.dwp.server.base64Certificate}
      },
      {
        path = ${?java.home}/lib/security/cacerts, # Default trust store
        password = "changeit" # Default trust store password
      }
    ]
  }
}

schema = """
{
  "$schema": "http://json-schema.org/schema#",
  "description": "A JSON schema to validate JSON as described in PPM-30048-UEM009-ICD001-HTS-HMRC-Interfaces v2.0.docx",

  "type" : "object",
  "additionalProperties": false,
  "required": ["forename", "surname", "dateOfBirth", "contactDetails", "registrationChannel", "nino"],
  "properties" : {
    "version": {
			"type": "string",
			"minLength" : 1,
			"maxLength" : 6,
			"examples": [
				"V2.0"
			]
		},
		"systemId": {
			"type": "string",
			"minLength" : 1,
			"maxLength" : 20,
			"examples": [
				"MDTP REGISTRATION"
			]
		},
   "nino" : {
      "type" : "string",
      "minLength": 9,
      "maxLength": 9,
      "pattern": "^(([A-CEGHJ-PR-TW-Z][A-CEGHJ-NPR-TW-Z])([0-9]{2})([0-9]{2})([0-9]{2})([A-D]{1})|((XX)(99)(99)(99)(X)))$"
    },
    "forename" : {
      "type" : "string",
      "minLength": 1,
      "maxLength": 26
    },
    "surname": {
      "type": "string",
      "minLength": 1,
      "maxLength": 300
    },
    "dateOfBirth": {
      "type": "string",
      "minLength": 8,
      "maxLength": 8,
      "pattern": "^[0-9]{4}(01|02|03|04|05|06|07|08|09|10|11|12)[0-9]{2}$"
    },
    "contactDetails": {
      "type": "object",
      "additionalProperties": false,
      "required": ["address1", "address2", "postcode", "communicationPreference"],
      "properties": {
        "address1": {
          "type": "string",
          "maxLength": 35
        },
        "address2": {
          "type": "string",
          "maxLength": 35
        },
        "address3": {
          "type": "string",
          "maxLength": 35
        },
        "address4": {
          "type": "string",
          "maxLength": 35
        },
        "address5": {
          "type": "string",
          "maxLength": 35
        },
        "postcode": {
          "type": "string",
          "maxLength": 10
        },
        "countryCode": {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "pattern": "[A-Z][A-Z]"
        },
        "communicationPreference": {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "pattern": "00|02"
        },
        "phoneNumber": {
          "type": "string",
          "maxLength": 15
        },
        "email": {
          "type": "string",
          "maxLength": """${email-validation.max-total-length}""",
          "pattern": "^.{1,"""${email-validation.max-local-length}"""}@.{1,"""${email-validation.max-domain-length}"""}$"
        }
      }
    },
    "registrationChannel": {
      "type": "string",
      "maxLength": 10,
      "pattern": "^online$|^callCentre$"
    },
    "nbaDetails": {
			"type": "object",
			"properties": {
				"accountNumber": {
					"type": "string",
					"minLength": 1,
					"maxLength": 8,
					"pattern": "^(\\d){1,8}$",
					"examples": [
						"11111111"
					]
				},
				"sortCode": {
					"type": "string",
					"minLength": 8,
					"maxLength": 8,
					"pattern": "^(\\d){2}-(\\d){2}-(\\d){2}$",
					"examples": [
						"80-14-97"
					]
				},
				"accountName": {
					"type": "string",
					"minLength": 2,
					"maxLength": 35,
					"examples": [
						"Mr John Doe"
					]
				},
				"rollNumber": {
					"type": "string",
					"minLength": 4,
					"maxLength": 18,
					"pattern": "^([0-9a-zA-Z\\/\\.-]{4,18})$",
					"examples": [
						"897/98X"
					]
				}
			},
			"required": ["accountNumber","sortCode","accountName"],
			"additionalProperties": false
		}
  }
}
"""
